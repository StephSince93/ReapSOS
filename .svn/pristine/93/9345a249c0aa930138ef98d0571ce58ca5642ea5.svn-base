import { DoCheck, EventEmitter, IterableDiffers, OnDestroy, OnInit, TemplateRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { Form, InfiniteScroll, Item, ModalController, Platform } from 'ionic-angular';
import { SelectSearchablePageComponent } from './select-searchable-page.component';
export declare class SelectSearchableComponent implements ControlValueAccessor, OnInit, OnDestroy, DoCheck {
    private _modalController;
    private ionForm;
    private _platform;
    private ionItem;
    private _iterableDiffers;
    private _cssClass;
    private _isIos;
    private _isMD;
    private _isOnSearchEnabled;
    private _isEnabled;
    private _isOpened;
    private _valueItems;
    private _value;
    private _modal;
    private _itemsDiffer;
    _filterText: string;
    _groups: any[];
    _itemsToConfirm: any[];
    _selectPageComponent: SelectSearchablePageComponent;
    _hasGroups: boolean;
    value: any;
    items: any[];
    isSearching: boolean;
    isEnabled: boolean;
    readonly isOpened: boolean;
    isOkButtonEnabled: boolean;
    itemValueField: string;
    itemTextField: string;
    groupValueField: string;
    groupTextField: string;
    canSearch: boolean;
    isOnSearchEnabled: boolean;
    canReset: boolean;
    hasInfiniteScroll: boolean;
    hasVirtualScroll: boolean;
    virtualScrollApproxItemHeight: string;
    virtualScrollApproxItemWidth: string;
    virtualScrollBufferRatio: number;
    virtualScrollHeaderFn: () => any;
    searchPlaceholder: string;
    isMultiple: boolean;
    noItemsFoundText: string;
    resetButtonText: string;
    okButtonText: string;
    closeButtonText: string;
    focusSearchbar: boolean;
    headerColor: string;
    groupColor: string;
    onChange: EventEmitter<any>;
    onSearch: EventEmitter<any>;
    onInfiniteScroll: EventEmitter<any>;
    onOpen: EventEmitter<any>;
    onClose: EventEmitter<any>;
    valueTemplate: TemplateRef<any>;
    itemTemplate: TemplateRef<any>;
    itemRightTemplate: TemplateRef<any>;
    labelTemplate: TemplateRef<any>;
    titleTemplate: TemplateRef<any>;
    messageTemplate: TemplateRef<any>;
    groupTemplate: TemplateRef<any>;
    groupRightTemplate: TemplateRef<any>;
    readonly itemsToConfirm: any[];
    searchDebounce: Number;
    disabledItems: any[];
    constructor(_modalController: ModalController, ionForm: Form, _platform: Platform, ionItem: Item, _iterableDiffers: IterableDiffers);
    initFocus(): void;
    enableIonItem(isEnabled: boolean): void;
    _click(event: UIEvent): void;
    _isNullOrWhiteSpace(value: any): boolean;
    _hasSearch(): boolean;
    _select(selectedItem: any): void;
    _emitChange(): void;
    _emitSearch(infiniteScroll: InfiniteScroll): void;
    _formatItem(item: any): string;
    private _setItems(items);
    private _setValue(value);
    private _getPropertyValue(object, property);
    private propagateChange;
    writeValue(value: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDisabledState(isDisabled: boolean): void;
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngDoCheck(): void;
    open(): Promise<any>;
    close(): Promise<any>;
    reset(): void;
    scrollToTop(): Promise<any>;
    scrollToBottom(): Promise<any>;
}
